/* ----------------------------------------------------------------
Drivers to elevate the arm in the scapular plane
----------------------------------------------------------------  */


AnyFolder Drivers = {
  
  // Aliases for convenient referencing
  AnyFolder &JntPos=...HumanModel.Mannequin.Posture;  
  AnyFolder &JntVel=...HumanModel.Mannequin.PostureVel;  
  
  AnyFolder &Thorax = ..BodyModel.Trunk.SegmentsThorax.ThoraxSeg;
  AnyFolder &ref=Main.Model.BodyModel.Trunk;
  
  
  /*----------------------------------------------
  Movement parameter
  ------------------------------------------------
  */
  
  #if SmallAbductionOn == 0
//  AnyVar startangle = 1;
//  AnyVar endangle = 120;
      AnyVar startangle = DesignVar(15);
  AnyVar endangle = DesignVar(120);
  
  #endif
  
  #if SmallAbductionOn == 1
//  AnyVar startangle = 1;
//  AnyVar endangle = 1.1;
  AnyVar startangle = 15;
  AnyVar endangle = 15.5;
  
  #endif
  
  
  #if SmallAbductionOn == 2
  AnyVar startangle = 15;
  AnyVar endangle = 170;
  #endif
  
  
  /*----------------------------------------------
  Drivers for the arm elevation
  ------------------------------------------------
  */
  
  #if ArmMovement == Elevation
    
    
    AnyKinEqFourierDriver AbductionDriverRight={
    AnyKinMeasureOrg &ref1 =...BodyModel.Interface.Right.GlenohumeralAbduction;
    Type = Sin;
    
    AnyVar w = pi/Main.Study.tEnd; 
    Freq = w/(2*pi) ;
    A = { {(.startangle+.endangle)/2, (.endangle-.startangle)/2}*pi/180 };
    B = { {pi/2, -pi/2} };
    Reaction.Type = {Off};    
  };  
  
  
  // Sets the flexion to 0deg
  AnyKinEqSimpleDriver GHFlexion = {
    
    AnyKinMeasureLinComb& ref1 =...BodyModel.Interface.Right.ScapulaHumerus.PlaneOfElevation;
    
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {Off};
    
  };
  
  // Sets the axial rotation to 0
  AnyKinEqSimpleDriver GHAxialRotation={
    
    AnyKinMeasureLinComb &ref3 =...BodyModel.Interface.Right.ScapulaHumerus.InternalAxialRotation;
    
    DriverPos=pi/180*{0
    };
    DriverVel = pi/180*{0 
    };
    Reaction.Type={Off};
  };
  
  #endif // Elevation
  
  
   /*----------------------------------------------
  Drivers for the glenohumeral abduction
  ------------------------------------------------
  */ 
  
  #if ArmMovement == Abduction
  
//    AnyKinEqSimpleDriver AbductionDriverRight={
//    
//    AnyKinMeasure& ref1 =...BodyModel.Interface.Right.GlenohumeralAbduction;   
//    DriverPos=pi/180*{.startangle};
//    
//    DriverVel = pi/180*{(.endangle - .startangle)/Main.Study.tEnd};
//    Reaction.Type={Off};
//  };
  
  
  AnyKinEqFourierDriver AbductionDriverRight={
    AnyKinMeasureOrg &ref1 =...BodyModel.Interface.Right.GlenohumeralAbduction;
    Type = Sin;
    
    AnyVar w = pi/Main.Study.tEnd; 
    Freq = w/(2*pi) ;
    A = { {(.startangle+.endangle)/2, (.endangle-.startangle)/2}*pi/180 };
    B = { {pi/2, -pi/2} };
    Reaction.Type = {Off};    
  };  
  
  #endif // Abduction
  
  
  
  
}; // Drivers






