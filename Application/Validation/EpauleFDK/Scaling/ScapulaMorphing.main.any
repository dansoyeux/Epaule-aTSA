// Todo: Write a small description of your model here

Main = {
  
  AnyFolder AcromionScaling = {
      AnyVar AcromionOffset  = 0.015;
    };
    
    
  // The actual body model goes in this folder
  AnyFolder MyModel = {
    
    // Global Reference Frame
    AnyFixedRefFrame GlobalRef = {
      // Todo: Add points for grounding of the model here
      
      
      
      
    };
    
    
    //    #define MorphedBone Humerus

    
    #include "Scapula/ScalingLawScapula.any"
    
    AnySeg SourceScapula = {
      Mass = 0; Jii = {0, 0, 0};
      
      AnyRefNode AnatomicalFrame = {
        AnyDrawRefFrame drw = {
          Visible = Off;
          RGB = {256,256,0}/256; 
        };
      };
      
      AnyRefNode AnatomicalFrameTransformed = {
        sRel = ..MyScalingLaw.RBFTransform({0.0,0.0,0.0});
        AnyDrawRefFrame drw = {
          Visible = Off;
          RGB = {0,0,1};
          
        };
      };      
      
      AnyRefNode gh = {
        sRel = {0.023398, -0.050863, -0.034381};
        AnyDrawRefFrame drw = {
          Visible = On;
          RGB = {1,1,0};     
        };
      };
      
      AnyRefNode ghTransformed = {
                sRel = ..MyScalingLaw.MyTransform({0.023398, -0.050863, -0.034381});
//        sRel = ..MyScalingLaw.AffineTransform({0.023398, -0.050863, -0.034381});
        AnyDrawRefFrame drw = {
          RGB = {0,0,1};
          Visible = On;
        };
      };
      
      
      
      
      
      

      

      
        AnyRefNode acj = {
        sRel = {0.006071006, -0.003598983, -0.03033098};
        AnyDrawRefFrame drw = {
          Visible = Off;
          RGB = {1,1,0};
          
        };
      }; 


      
      
      
      
      
      
      
      
      AnyRefNode AcromionEnd = {
        
        sRel = {0.0410839, -0.00843409, -0.0393176};
        AnyDrawRefFrame drw = {
          Visible = On;
          RGB = {1,1,0};
        };
      };
      
      AnyRefNode AcromionEndTransformed = {
        sRel = ..MyScalingLaw.MyTransform({0.0410839, -0.00843409, -0.0393176});
//        sRel = ..MyScalingLaw.AffineTransform({0.0410839, -0.00843409, -0.0393176});
        AnyDrawRefFrame drw = {
          Visible = On;
          RGB = {0,0,1};
        };
      };
      

      
      
      
      AnyDrawSurf Surface = 
      {
        FileName = "Scapula/SourceScapula.stl";
        RGB = {256,256,0}/256;
      }; 
      
      AnyDrawSurf AffineTransform = 
      {
        Visible = Off;
        FileName = "Scapula/SourceScapula.stl";
        RGB = {1,0,0};
        AnyFunTransform3D &ref = ..MyScalingLaw.AffineTransform;
        //AnyFunTransform3D &ref = ..MyScalingLaw.Transform_Low;
      };      
      
      AnyDrawSurf RBFTransform = 
      {
        Visible = On;
        FileName = "Scapula/SourceScapula.stl";
        RGB = {0,0,1};
        AnyFunTransform3D &ref = ..MyScalingLaw.RBFTransform;
      };
      

      
      
      AnyDrawSurf MyTransform = 
      {
        Visible = Off;
        FileName = "Scapula/SourceScapula.stl";
        RGB = {1,0,1};
        AnyFunTransform3D &ref = ..MyScalingLaw.MyTransform;
      };
      
      
 
      
      //-----------------------------------------------------------------
      //GRID
      #include "grid.any"
      AnyDrawPointCloud a = 
      {
        RGB = {1, 1, 0};
        Points = .DrawGrid.Grid;
      };
      
            AnyDrawPointCloud b = 
      {
        RGB = {1, 0, 0};
        Points = ..MyScalingLaw.MyTransform(.DrawGrid.Grid);
      };
      
      
//      AnyDrawPointCloud c = 
//      {
//        RGB = {0, 1, 0};
//        Points = .DrawGrid.Grid_Gauche;
//      };      
      
      


      

      
      
    };  
  };


  
  // The study: Operations to be performed on the model
  AnyBodyStudy MyStudy = {
    AnyFolder &Model = .MyModel;
    Gravity = {0.0, -9.81, 0.0};
    
      AnyOperationMacro SaveSTL_ScapulaGlobal ={
      MacroStr= {
        "classoperation Main.MyModel.SourceScapula.MyTransform" 
        + strquote("Export surface") 
        + "--file=" + strquote("ScapulaTransformed.stl")
        + "--scale=" + strquote("1000")
        + "--reference=" 
        + strquote("local")
      };

    };  

    
    
  };//Study
  
  
  

  };//Main

